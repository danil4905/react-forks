{"version":3,"sources":["components/Search/Search.module.css","components/Table/Table.module.css","components/Home/Home.module.css","components/Loader/Loader.module.css","components/Pagination/Pagination.module.css","hoc/Layout/Layout.jsx","hoc/Aux/Aux.jsx","store/actions/actionTypes.js","axios-base-url.js","store/actions/actions.js","components/Search/Search.js","components/Home/Home.jsx","components/Table/Table.jsx","components/Loader/Loader.jsx","components/Pagination/Pagination.jsx","components/Results/Results.jsx","App.js","store/reducers/tableReducer.js","store/reducers/remoteIterations.js","store/reducers/main.js","store/reducers/pagination.js","store/reducers/index.js","index.js"],"names":["module","exports","Layout","props","state","children","this","className","classes","main","React","Component","aux","FILL_TABLE","CLEAR_TABLE","ERR_404","ERR_404_GONE","VALID_INPUT","NOT_VALID_INPUT","LOAD_START","LOAD_SUCCESS","LOAD_FAILS","PAGINATION_INIT","PAGINATION_UPDATE","PAGINATION_RESET","INIT_TARGET_REPO_NAME","CLEAR_TARGET_REPO_NAME","instance","axios","create","baseURL","fillTable","data","type","actionTypes","array","error404","error404gone","loadSuccess","loadFails","paginationReset","submitInput","path","targetRepoName","dispatch","get","then","response","strWithLinks","headers","link","initTargetRepoName","catch","err","undefined","status","message","search","console","log","clickHandlerPaginationButton","targetPage","paginationUpdate","Search","submitHandler","event","preventDefault","onSubmit","inputValid","notValidInput","loadStart","history","isValid","value","push","getTargetRepoName","handleChange","valid","checkValidity","target","setState","isTouched","str","check","match","oneslash","substr","indexOf","inputclassesClasses","input","input__warn","label","htmlFor","id","join","placeholder","onChange","label__hint","withRouter","connect","actions","Home","Aux","greeting__h2","table","Array","isArray","map","forker","owner","url","key","repoName","full_name","stars","stargazers_count","login","Math","random","html_url","href","Table","caption","thead","tbody","Loader","totalPages","pagination","currentPage","clickHandler","partOfPath","show","em","fontStyle","transform","substring","getPartOfPath","Pagination","fill","n","index","button","style","onClick","btn","content","onClickHandler","arrowButton","arr","center","i","number","remoteIterations","isInputValid","loading","result","messageOn404","margin","width","textAlign","marginBottom","messageInputNotValid","App","routes","exact","component","Results","to","copyState","JSON","parse","stringify","initialState","action","newState","clearTable","tableReducer","occured404","cansel404","inputNotValid","clearTargetRepoName","paginationInit","Number","rootReducer","combineReducers","store","createStore","compose","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById"],"mappings":"kFACAA,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,sBAAsB,MAAQ,sBAAsB,YAAc,4BAA4B,YAAc,8B,mBCAtKD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,QAAU,uBAAuB,MAAQ,qBAAqB,MAAQ,uB,wCCArHD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,aAAe,6B,wCCA3DD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,wB,kBCA1DD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,OAAS,2BAA2B,YAAc,kC,kICsBjGC,E,kDAlBb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,GAFI,E,0CAKnB,WACE,IAAQC,EAAaC,KAAKH,MAAlBE,SAER,OACE,qBAAKE,UAAWC,IAAQN,OAAxB,SACE,sBAAMK,UAAWC,IAAQC,KAAzB,SACGJ,U,GAZUK,IAAMC,WCHZC,EADH,SAAAT,GAAK,OAAIA,EAAME,U,QCAdQ,EAAa,aACbC,EAAc,cAEdC,EAAU,UACVC,EAAe,eAEfC,EAAc,cACdC,EAAkB,kBAElBC,EAAa,aACbC,EAAe,eACfC,EAAa,aAEbC,EAAkB,kBAClBC,EAAoB,oBACpBC,EAAmB,mBAEnBC,EAAwB,wBACxBC,EAAyB,yB,QCZvBC,E,OAJEC,EAAMC,OAAO,CAC5BC,QAAS,4BCCEC,EAAY,SAAAC,GAAI,MAAK,CAChCC,KAAMC,EACNC,MAAOH,IAIII,EAAW,iBAAO,CAAEH,KAAMC,IAC1BG,EAAe,iBAAO,CAAEJ,KAAMC,IAM9BI,EAAc,iBAAO,CAAEL,KAAMC,IAC7BK,EAAY,iBAAO,CAAEN,KAAMC,IAiB3BM,EAAkB,iBAAO,CAAEP,KAAMC,IAKjCO,EAAc,SAACC,EAAMC,GAAP,OACzB,SAACC,GACCjB,EAASkB,IAAIH,GACVI,MAAK,SAACC,GAhBiB,IAAAC,EAiBtBJ,EAASN,KACTM,EAASP,KACTO,GAnBsBI,EAmBED,EAASE,QAAQC,KAnBF,CAC7CjB,KAAMC,EACNc,kBAkBMJ,EA3B0B,SAAAD,GAAc,MAAK,CACnDV,KAAMC,EACNS,iBACAX,KAAM,aAwBSmB,CAAmBR,IAC5BC,EAASb,EAAUgB,EAASf,UAE7BoB,OAAM,SAACC,GACNT,EAASL,KACTK,EAASJ,UACYc,IAAjBD,EAAIN,UAAmD,MAAxBM,EAAIN,SAASQ,SAAiD,IAA/BF,EAAIG,QAAQC,OAAO,OAGnFC,QAAQC,IAAIN,GAFZT,EAASR,UAQNwB,EAA+B,SAAClB,EAAMmB,GAAP,OAC1C,SAACjB,GACCjB,EAASkB,IAAIH,GACVI,MAAK,SAACC,GACLH,EAASN,KACTM,EAASP,KACTO,EArCwB,SAAAiB,GAAU,MAAK,CAC7C5B,KAAMC,EACN2B,cAmCeC,CAAiBD,IAC1BjB,EAASb,EAAUgB,EAASf,UAE7BoB,OAAM,SAACC,GACNT,EAASL,KACTK,EAASJ,UACYc,IAAjBD,EAAIN,UAAmD,MAAxBM,EAAIN,SAASQ,SAAiD,IAA/BF,EAAIG,QAAQC,OAAO,QAGnFb,EArEuB,CAAEX,KAAMC,IAsE/BU,EArDgC,CAAEX,KAAMC,IAsDxCwB,QAAQC,IAAIN,IAJZT,EAASR,U,iBCnEb2B,E,kDACJ,WAAY5D,GAAQ,IAAD,8BACjB,cAAMA,IAQR6D,cAAgB,SAACC,GACfA,EAAMC,iBACN,MAMI,EAAK/D,MALPgE,EADF,EACEA,SACAC,EAFF,EAEEA,WACAC,EAHF,EAGEA,cACAC,EAJF,EAIEA,UACAC,EALF,EAKEA,QAEF,EAA2B,EAAKnE,MAAxBoE,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,MAIbD,GACFF,IACAC,EAAQG,KAAK,YACbN,IAEAD,EADI,gBAAYM,EAAZ,UACW,EAAKE,kBAAkBF,MAGtCJ,IACAE,EAAQG,KAAK,cA/BE,EAmCnBE,aAAe,SAACX,GACd,IAAMY,EAAQ,EAAKC,cAAcb,EAAMc,OAAON,OAC9C,EAAKO,SAAS,CACZP,MAAOR,EAAMc,OAAON,MACpBQ,WAAW,EACXT,QAASK,KAxCM,EA4CnBC,cAAgB,SAACI,GACf,IAQMC,EAAQD,EAAIE,MARH,2EAWTC,EAAWH,EAAIE,MAAM,OAE3B,OAAQD,KAAWE,GA1DF,EA6DnBV,kBAAoB,SAACF,GAAD,OAElBA,EAAMa,OAAOb,EAAMc,QAAQ,KAAO,IA7DlC,EAAKnF,MAAQ,CACXqE,MAAO,GACPD,SAAS,EACTS,WAAW,GALI,E,0CAiEnB,WACE,MAAsC3E,KAAKF,MAAnCqE,EAAR,EAAQA,MAAOD,EAAf,EAAeA,QAASS,EAAxB,EAAwBA,UAClBO,EAAsB,CAAChF,IAAQiF,OAMrC,OAJIR,IAAcT,GAChBgB,EAAoBd,KAAKlE,IAAQkF,aAIjC,sBAAMnF,UAAWC,IAAQiD,OAAQU,SAAU7D,KAAK0D,cAAhD,SACE,wBAAOzD,UAAWC,IAAQmF,MAAOC,QAAQ,gBAAzC,UACE,uBACEC,GAAG,gBACH5D,KAAK,OACL1B,UAAWiF,EAAoBM,KAAK,KACpCrB,MAAOA,EACPsB,YAAY,iLACZC,SAAU1F,KAAKsE,eAEjB,sBAAMrE,UAAWC,IAAQyF,YAAzB,qM,GArFWvF,IAAMC,WAsGZuF,cAAWC,YAAQ,MAPP,SAAAvD,GAAQ,MAAK,CACtCuB,SAAU,SAACzB,EAAMC,GAAP,OAA0BC,EAASwD,EAAoB1D,EAAMC,KACvEyB,WAAY,kBAAMxB,ED3Fa,CAAEX,KAAMC,KC4FvCmC,cAAe,kBAAMzB,ED7Fa,CAAEX,KAAMC,KC8F1CoC,UAAW,kBAAM1B,ED3Fa,CAAEX,KAAMC,QC8FdiE,CAAkCpC,I,iBCrF7CsC,EAnBF,kBACX,eAACC,EAAD,WACE,sBAAK/F,UAAWC,IAAQ6F,KAAxB,UACE,oBAAI9F,UAAWC,IAAQ+F,aAAvB,uHACA,uRAEE,yCAFF,yOAKA,0QAEE,uDAFF,UAMF,cAAC,EAAD,Q,iBCgDWJ,eALS,SAAA/F,GAAK,MAAK,CAChC+B,MAAO/B,EAAMoG,MAAMrE,MACnBQ,eAAgBvC,EAAMK,KAAKkC,kBAGdwD,EAhED,SAAC,GAA+B,IAA7BhE,EAA4B,EAA5BA,MAAOQ,EAAqB,EAArBA,eAClBX,EAAOG,EAwCX,OArCEH,EADEyE,MAAMC,QAAQ1E,GACTA,EAAK2E,KAAI,SAACC,GACf,IAAIC,EACAC,EAGAC,EAFEC,EAAWJ,EAAOK,UAAYL,EAAOK,UAAY,6MACjDC,OAAoC5D,IAA5BsD,EAAOO,iBAAiCP,EAAOO,iBAAmB,6MAkBhF,OAfIP,EAAOC,OACTA,EAAQD,EAAOC,MAAMO,MAErBL,EAAMH,EAAOC,MAAMO,MAAQR,EAAOC,MAAMO,MAAQC,KAAKC,SAAWD,KAAKC,WAErET,EAAQ,6MACRE,EAAMM,KAAKC,SAAWD,KAAKC,UAI3BR,EADEF,EAAOW,SACHX,EAAOW,SAEP,IAIN,+BACE,6BAAKP,IACL,6BAAKH,IACL,6BAAKK,IACL,6BAAI,mBAAGM,KAAMV,EAAT,SAAeA,QAJZC,MASN,KAETrD,QAAQC,IAAIhB,GACZe,QAAQC,IAAI3B,GAGV,wBAAOzB,UAAWC,IAAQiH,MAA1B,UACE,yBAASlH,UAAWC,IAAQkH,QAA5B,4FAA2D/E,KAC3D,uBAAOpC,UAAWC,IAAQmH,MAA1B,SACE,+BACE,qJACA,kFACA,gGACA,0LAGJ,uBAAOpH,UAAWC,IAAQoH,MAA1B,SACG5F,U,iBCnDM6F,EAJA,kBACb,qBAAKtH,UAAWC,IAAQqH,U,iBC8LX1B,gBAZS,SAAA/F,GAAK,MAAK,CAChC0H,WAAY1H,EAAM2H,WAAWD,WAC7B5E,KAAM9C,EAAM2H,WAAW7E,KACvB8E,YAAa5H,EAAM2H,WAAWC,gBAGL,SAAApF,GAAQ,MAAK,CACtCqF,aAAc,SAACvF,EAAMmB,GAAP,OAAsBjB,EAClCwD,EAAqC1D,EAAMmB,QAIhCsC,EAzLI,SAAChG,GAClB,IAGI4H,EACAG,EAHFC,EACEhI,EADFgI,KAAML,EACJ3H,EADI2H,WAAY5E,EAChB/C,EADgB+C,KAAM8E,EACtB7H,EADsB6H,YAAaC,EACnC9H,EADmC8H,aAMjCG,EAAK,CACTC,UAAW,OACXC,UAAW,cAoEb,GAjEa,KAATpF,IAAegF,EAfC,SAAAhF,GAAI,OAAIA,EAAKqF,UAAUrF,EAAKqC,QAAQ,gBAAiBrC,EAAKqC,QAAQ,WAetDiD,CAActF,IAGzCiF,GAAuB,IAAfL,IAAoBC,EAAa,MAG1CD,EAAa,GAAKA,GAZR,IAaZC,EACE,qBAAKxH,UAAWC,KAAQiI,WAAxB,SAEIhC,MAAMqB,GAAYY,KAAK,IAAI/B,KAAI,SAACgC,EAAGC,GAAJ,OAC7B,wBAEErI,UAAWC,KAAQqI,OACnB5G,KAAK,SACL6G,MAAOF,IAAUZ,EAAc,EAAII,EAAK,GACxCW,QAAS,kBAAMd,EAAa,GAAD,OAAIC,EAAJ,iBAAuBU,EAAQ,GAAKA,EAAQ,IALzE,SAOGA,EAAQ,GANJvB,KAAKC,gBAgBlBQ,EAlCU,GAkCYE,GAnCR,IAoChBD,EACE,sBAAKxH,UAAWC,KAAQiI,WAAxB,UAEIhC,MAtCM,GAsCOiC,KAAK,IAAI/B,KAAI,SAACqC,EAAKJ,GAC9B,IAAIK,EAAUL,EAAQ,EAClBM,EAAiB,kBAAMjB,EAAa,GAAD,OAAIC,EAAJ,iBAAuBU,EAAQ,GAAKA,EAAQ,IAMnF,OALc,IAAVA,IAAeK,EAAU,OACf,IAAVL,IACFK,EAAUnB,EACVoB,EAAiB,kBAAMjB,EAAa,GAAD,OAAIC,EAAJ,iBAAuBJ,GAAcA,KAGxE,wBAEEvH,UAAWC,KAAQqI,OACnB5G,KAAK,SACL6G,MAAOF,IAAUZ,EAAc,EAAII,EAAK,GACxCW,QAASG,EALX,SAOID,GANG5B,KAAKC,aAUlB,wBAEE/G,UAAW,CAACC,KAAQqI,OAAQrI,KAAQ2I,aAAarD,KAAK,KACtD7D,KAAK,SACL8G,QAAS,kBAAMd,EAAa,GAAD,OAAIC,EAAJ,iBAAuBF,EAAc,GAAKA,EAAc,IAJrF,iBACOX,KAAKC,cAYdQ,EAvEU,GAuEYE,EAxER,GAwEmCA,GAAeF,EAxElD,EAwE0E,CAG1F,IAFA,IAAMsB,EAAM,GACNC,EAASrB,EAAc,EACpBsB,EAAID,EAAQC,EAAID,EAAS,EAAGC,GAAK,EAAKF,EAAI1E,KAAK4E,GACxDvB,EACE,sBAAKxH,UAAWC,KAAQiI,WAAxB,UACE,wBAEElI,UAAW,CAACC,KAAQqI,OAAQrI,KAAQ2I,aAAarD,KAAK,KACtD7D,KAAK,SACL8G,QAAS,kBAAMd,EAAa,GAAD,OAAIC,EAAJ,iBAAuBF,EAAc,GAAKA,EAAc,IAJrF,iBACOX,KAAKC,UAQV8B,EAAIzC,KAAI,SAAC4C,EAAQX,GACf,IAAIK,EAAUM,EACVL,EAAiB,kBAAMjB,EAAa,GAAD,OAAIC,EAAJ,iBAAuBqB,GAAUA,IAUxE,OATc,IAAVX,IACFK,EAAU,IACVC,EAAiB,kBAAMjB,EAAa,GAAD,OAAIC,EAAJ,WAAyB,KAEhD,IAAVU,GAAyB,IAAVA,IAAeK,EAAU,OAC9B,IAAVL,IACFK,EAAUnB,EACVoB,EAAiB,kBAAMjB,EAAa,GAAD,OAAIC,EAAJ,iBAAuBJ,GAAcA,KAGxE,wBAEEvH,UAAWC,KAAQqI,OACnB5G,KAAK,SACL6G,MAAOS,IAAWvB,EAAcI,EAAK,GACrCW,QAASG,EALX,SAOGD,GANI5B,KAAKC,aAUlB,wBAEE/G,UAAW,CAACC,KAAQqI,OAAQrI,KAAQ2I,aAAarD,KAAK,KACtD7D,KAAK,SACL8G,QAAS,kBAAMd,EAAa,GAAD,OAAIC,EAAJ,iBAAuBF,EAAc,GAAKA,EAAc,IAJrF,iBACOX,KAAKC,aAYlB,GAAIQ,EA3HU,GA2HYE,EA5HR,GA4HmCA,EAAcF,EA5HjD,EA4HyE,CAGzF,IAFA,IAAMsB,EAAM,GAEHE,EADIxB,EA7HD,EA6HsB,EACfwB,GAAKxB,EAAYwB,GAAK,EAAKF,EAAI1E,KAAK4E,GACvDvB,EACE,sBAAKxH,UAAWC,KAAQiI,WAAxB,UACE,wBAEElI,UAAW,CAACC,KAAQqI,OAAQrI,KAAQ2I,aAAarD,KAAK,KACtD7D,KAAK,SACL8G,QAAS,kBAAMd,EAAa,GAAD,OAAIC,EAAJ,iBAAuBF,EAAc,GAAKA,EAAc,IAJrF,iBACOX,KAAKC,UAQV8B,EAAIzC,KAAI,SAAC4C,EAAQX,GACf,IAAIK,EAAUM,EACVL,EAAiB,kBAAMjB,EAAa,GAAD,OAAIC,EAAJ,iBAAuBqB,GAAUA,IAOxE,OANc,IAAVX,IACFK,EAAU,IACVC,EAAiB,kBAAMjB,EAAa,GAAD,OAAIC,EAAJ,WAAyB,KAEhD,IAAVU,IAAeK,EAAU,OACf,IAAVL,IAAeK,EAAUnB,GAE3B,wBAEEvH,UAAWC,KAAQqI,OACnB5G,KAAK,SACL6G,MAAOS,IAAWvB,EAAcI,EAAK,GACrCW,QAASG,EALX,SAOGD,GANI5B,KAAKC,gBAcxB,OAAOS,KCxHM5B,gBANS,SAAA/F,GAAK,MAAK,CAChCgC,SAAUhC,EAAMoJ,iBAAiBpH,SACjCqH,aAAcrJ,EAAMK,KAAKgJ,aACzBC,QAAStJ,EAAMK,KAAKiJ,WAGPvD,EAlDC,SAAChG,GACf,IAaIwJ,EAbIvH,EAAoCjC,EAApCiC,SAAUqH,EAA0BtJ,EAA1BsJ,aAAcC,EAAYvJ,EAAZuJ,QAE1BE,EACJ,sBAAKd,MAAO,CAAEe,OAAQ,OAAQC,MAAO,MAAOC,UAAW,UAAvD,UACE,mBAAGjB,MAAO,CAAEkB,aAAc,SAA1B,0IACA,wpBAMEC,EAAuB,sHA2B7B,OAvBI7H,GAAYqH,IACdE,EAAS,eAAErD,EAAF,WACP,cAAC,EAAD,IACCsD,EACD,cAAC,GAAD,SAGCxH,GAAYqH,IACfE,EAAS,eAACrD,EAAD,WACP,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,GAAD,QAGCmD,IACHE,EAAS,eAACrD,EAAD,WACP,cAAC,EAAD,IACC2D,EACD,cAAC,GAAD,QAGAP,IAAWC,EAAS,cAAC,EAAD,KAGpBA,KCjBSO,G,kDAtBb,WAAY/J,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,GAFI,E,0CAKnB,WACE,IAAM+J,EACJ,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAAC1H,KAAK,IAAI2H,UAAWhE,IACjC,cAAC,IAAD,CAAO3D,KAAK,WAAW2H,UAAWC,KAClC,cAAC,IAAD,CAAUC,GAAG,SAIjB,OACE,qBAAKhK,UAAU,MAAf,SACE,cAAC,EAAD,UAAS4J,U,GAjBCzJ,IAAMC,W,+CCPlB6J,GAAY,SAACpK,GAEjB,OADiBqK,KAAKC,MAAMD,KAAKE,UAAUvK,KAIvCwK,GAAe,CACnBzI,MAAO,IAGHJ,GAAY,SAAC3B,EAAOyK,GACxB,IAAMC,EAAWN,GAAUpK,GAE3B,OADA0K,EAAS3I,MAAQ0I,EAAO1I,MACjB2I,GAGHC,GAAa,SAAC3K,GAClB,IAAM0K,EAAWN,GAAUpK,GAE3B,OADA0K,EAAS3I,MAAQ,GACV2I,GAWME,GARM,WAAmC,IAAlC5K,EAAiC,uDAAzBwK,GAAcC,EAAW,uCACrD,OAAQA,EAAO5I,MACb,KAAKC,EAAwB,OAAOH,GAAU3B,EAAOyK,GACrD,KAAK3I,EAAyB,OAAO6I,GAAW3K,GAChD,QAAS,OAAOA,ICzBdwK,GAAe,CACnBxI,UAAU,GAGNoI,GAAY,SAACpK,GAEjB,OADiBqK,KAAKC,MAAMD,KAAKE,UAAUvK,KAIvC6K,GAAa,SAAC7K,GAClB,IAAM0K,EAAWN,GAAUpK,GAE3B,OADA0K,EAAS1I,UAAW,EACb0I,GAGHI,GAAY,SAAC9K,GACjB,IAAM0K,EAAWN,GAAUpK,GAE3B,OADA0K,EAAS1I,UAAW,EACb0I,GAWMtB,GARU,WAAmC,IAAlCpJ,EAAiC,uDAAzBwK,GAAcC,EAAW,uCACzD,OAAQA,EAAO5I,MACb,KAAKC,EAAqB,OAAO+I,GAAW7K,GAC5C,KAAK8B,EAA0B,OAAOgJ,GAAU9K,GAChD,QAAS,OAAOA,ICzBdoK,GAAY,SAACpK,GAEjB,OADiBqK,KAAKC,MAAMD,KAAKE,UAAUvK,KAIvCwK,GAAe,CACnBnB,cAAc,EACdC,SAAS,EACT/G,eAAgB,IAGZyB,GAAa,SAAChE,GAClB,IAAM0K,EAAWN,GAAUpK,GAE3B,OADA0K,EAASrB,cAAe,EACjBqB,GAGHK,GAAgB,SAAC/K,GACrB,IAAM0K,EAAWN,GAAUpK,GAE3B,OADA0K,EAASrB,cAAe,EACjBqB,GAGHxG,GAAY,SAAClE,GACjB,IAAM0K,EAAWN,GAAUpK,GAE3B,OADA0K,EAASpB,SAAU,EACZoB,GAGHxI,GAAc,SAAClC,GACnB,IAAM0K,EAAWN,GAAUpK,GAE3B,OADA0K,EAASpB,SAAU,EACZoB,GAGHvI,GAAY,SAACnC,GACjB,IAAM0K,EAAWN,GAAUpK,GAE3B,OADA0K,EAASpB,SAAU,EACZoB,GAGH3H,GAAqB,SAAC/C,EAAOyK,GACjC,IAAMC,EAAWN,GAAUpK,GACnBuC,EAAmBkI,EAAnBlI,eAER,OADAmI,EAASnI,eAAiBA,EACnBmI,GAGHM,GAAsB,SAAChL,GAC3B,IAAM0K,EAAWN,GAAUpK,GAE3B,OADA0K,EAASnI,eAAiB,GACnBmI,GAgBMrK,GAbF,WAAmC,IAAlCL,EAAiC,uDAAzBwK,GAAcC,EAAW,uCAC7C,OAAQA,EAAO5I,MACb,KAAKC,EAAyB,OAAOkC,GAAWhE,GAChD,KAAK8B,EAA6B,OAAOiJ,GAAc/K,GACvD,KAAK8B,EAAwB,OAAOoC,GAAUlE,GAC9C,KAAK8B,EAA0B,OAAOI,GAAYlC,GAClD,KAAK8B,EAAwB,OAAOK,GAAUnC,GAC9C,KAAK8B,EAAmC,OAAOiB,GAAmB/C,EAAOyK,GACzE,KAAK3I,EAAoC,OAAOkJ,GAAoBhL,GACpE,QAAS,OAAOA,IC/DdwK,GAAe,CACnB9C,WAAY,EACZ5E,KAAM,GACN8E,YAAa,GAETwC,GAAY,SAACpK,GAEjB,OADiBqK,KAAKC,MAAMD,KAAKE,UAAUvK,KAIvCiL,GAAiB,SAACjL,EAAOyK,GAC7B,IAAQ7H,EAAiB6H,EAAjB7H,aACF8H,EAAWN,GAAUpK,GAE3B,GAAI4C,EAAc,CAChB,IACME,EADQF,EAAaoC,MAAM,gBACd,GACb0C,EAAawD,OAAOpI,EAAKqF,UAAUrF,EAAKqC,QAAQ,UAAY,IAClEuF,EAAS5H,KAAOA,EAChB4H,EAAShD,WAAaA,OAEtBgD,EAAShD,WAAa,EACtBgD,EAAS5H,KAAO,GAGlB,OADA4H,EAAS9C,YAAc,EAChB8C,GAGHhH,GAAmB,SAAC1D,EAAOyK,GAC/B,IAAMC,EAAWN,GAAUpK,GAE3B,OADA0K,EAAS9C,YAAc6C,EAAOhH,WACvBiH,GAGHtI,GAAkB,SAACpC,GACvB,IAAM0K,EAAWN,GAAUpK,GAI3B,OAHA0K,EAAShD,WAAa,EACtBgD,EAAS5H,KAAO,GAChB4H,EAASjH,WAAa,EACfiH,GAYM/C,GATI,WAAmC,IAAlC3H,EAAiC,uDAAzBwK,GAAcC,EAAW,uCACnD,OAAQA,EAAO5I,MACb,KAAKC,EAA6B,OAAOmJ,GAAejL,EAAOyK,GAC/D,KAAK3I,EAA+B,OAAO4B,GAAiB1D,EAAOyK,GACnE,KAAK3I,EAA8B,OAAOM,GAAgBpC,GAC1D,QAAS,OAAOA,ICpCLmL,GAPKC,aAAgB,CAClChF,MAAOwE,GACPxB,oBACA/I,QACAsH,gBCEI0D,GAAQC,aAAYH,GAAaI,aAAQC,aAAgBC,QAEzDC,GACJ,cAAC,IAAD,CAAUL,MAAOA,GAAjB,SACE,cAAC,KAAD,UACE,cAAC,GAAD,QAKNM,KAASC,OAAOF,GAAKG,SAASC,eAAe,W","file":"static/js/main.71e0e771.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Search_search__3OUtB\",\"label\":\"Search_label__22ZlC\",\"input\":\"Search_input__yx45c\",\"input__warn\":\"Search_input__warn__1zswX\",\"label__hint\":\"Search_label__hint__2mxOq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Table\":\"Table_Table__1gUAx\",\"caption\":\"Table_caption__1OHev\",\"thead\":\"Table_thead__1OMLY\",\"tbody\":\"Table_tbody__28b1x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Home\":\"Home_Home__Hrybx\",\"greeting__h2\":\"Home_greeting__h2__2ycdL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__17sQZ\",\"load7\":\"Loader_load7__1OjZe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Pagination\":\"Pagination_Pagination__13PUG\",\"button\":\"Pagination_button__2hkWY\",\"arrowButton\":\"Pagination_arrowButton__3tJVg\"};","import React from 'react';\n\nimport classes from './Layout.module.css';\n\nclass Layout extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const { children } = this.props;\n\n    return (\n      <div className={classes.Layout}>\n        <main className={classes.main}>\n          {children}\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Layout;\n","const aux = props => props.children;  // Kомпонет-обертка. Возвращает переданный ему компонент.\nexport default aux;\n","export const FILL_TABLE = 'FILL_TABLE';\nexport const CLEAR_TABLE = 'CLEAR_TABLE';\n\nexport const ERR_404 = 'ERR_404';\nexport const ERR_404_GONE = 'ERR_404_GONE';\n\nexport const VALID_INPUT = 'VALID_INPUT';\nexport const NOT_VALID_INPUT = 'NOT_VALID_INPUT';\n\nexport const LOAD_START = 'LOAD_START';\nexport const LOAD_SUCCESS = 'LOAD_SUCCESS';\nexport const LOAD_FAILS = 'LOAD_FAILS';\n\nexport const PAGINATION_INIT = 'PAGINATION_INIT';\nexport const PAGINATION_UPDATE = 'PAGINATION_UPDATE';\nexport const PAGINATION_RESET = 'PAGINATION_RESET';\n\nexport const INIT_TARGET_REPO_NAME = 'INIT_TARGET_REPO_NAME';\nexport const CLEAR_TARGET_REPO_NAME = 'CLEAR_TARGET_REPO_NAME';\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.github.com/',\n});\n\nexport default instance;\n","import * as actionTypes from './actionTypes';\nimport instance from \"../../axios-base-url\";\n\n/* Action Creators */\nexport const fillTable = data => ({\n  type: actionTypes.FILL_TABLE,\n  array: data, // ожидаю массив\n});\nexport const clearTable = () => ({ type: actionTypes.CLEAR_TABLE });\n\nexport const error404 = () => ({ type: actionTypes.ERR_404 });\nexport const error404gone = () => ({ type: actionTypes.ERR_404_GONE });\n\nexport const notValidInput = () => ({ type: actionTypes.NOT_VALID_INPUT });\nexport const validInput = () => ({ type: actionTypes.VALID_INPUT });\n\nexport const loadStart = () => ({ type: actionTypes.LOAD_START });\nexport const loadSuccess = () => ({ type: actionTypes.LOAD_SUCCESS });\nexport const loadFails = () => ({ type: actionTypes.LOAD_FAILS });\n\nexport const initTargetRepoName = targetRepoName => ({\n  type: actionTypes.INIT_TARGET_REPO_NAME,\n  targetRepoName,\n  data: 'test data',\n});\nexport const clearTargetRepoName = () => ({ type: actionTypes.CLEAR_TARGET_REPO_NAME });\n\nexport const initPagination = strWithLinks => ({\n  type: actionTypes.PAGINATION_INIT,\n  strWithLinks,\n});\nexport const paginationUpdate = targetPage => ({\n  type: actionTypes.PAGINATION_UPDATE,\n  targetPage,\n});\nexport const paginationReset = () => ({ type: actionTypes.PAGINATION_RESET });\n\n/* Action Creator возвращает не объект, а функцию.\nчерез middleware redux-thunk.чтобы\nиметь возможность отложить выполнения экшена и изменение state, до получение ответа от сервера.*/\nexport const submitInput = (path, targetRepoName) => (\n  (dispatch) => {\n    instance.get(path) // строка запроса на основе пользовательского ввода\n      .then((response) => {\n        dispatch(loadSuccess());\n        dispatch(error404gone());\n        dispatch(initPagination(response.headers.link));\n        dispatch(initTargetRepoName(targetRepoName));\n        dispatch(fillTable(response.data)); // пока что заполняю страницу первой порцией данных\n      })\n      .catch((err) => {\n        dispatch(loadFails());\n        dispatch(paginationReset());\n        if (err.response !== undefined && (err.response.status === 404 || err.message.search('404') !== -1)) {\n          dispatch(error404());\n        } else {\n          console.log(err);\n        }\n      });\n  }\n);\n\nexport const clickHandlerPaginationButton = (path, targetPage) => (\n  (dispatch) => {\n    instance.get(path)\n      .then((response) => {\n        dispatch(loadSuccess());\n        dispatch(error404gone());\n        dispatch(paginationUpdate(targetPage));\n        dispatch(fillTable(response.data));\n      })\n      .catch((err) => {\n        dispatch(loadFails());\n        dispatch(paginationReset());\n        if (err.response !== undefined && (err.response.status === 404 || err.message.search('404') !== -1)) {\n          dispatch(error404());\n        } else {\n          dispatch(clearTable());\n          dispatch(clearTargetRepoName());\n          console.log(err);\n        }\n      });\n  }\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport * as actions from '../../store/actions/actions';\n\nimport classes from './Search.module.css';\n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: \"\",\n      isValid: false,\n      isTouched: false,\n    };\n  }\n\n  submitHandler = (event) => {\n    event.preventDefault();\n    const {\n      onSubmit,\n      inputValid,\n      notValidInput,\n      loadStart,\n      history,\n    } = this.props;\n    const { isValid, value } = this.state;\n\n    let path = \"\";\n\n    if (isValid) {\n      loadStart();\n      history.push(\"/results\"); // переместиться на страницу /results\n      inputValid(); // меняем редаксовский state\n      path = `repos/${value}/forks`;\n      onSubmit(path, this.getTargetRepoName(value));\n    } else {\n      // не валидный ввод\n      notValidInput(); // меняем редаксовский state\n      history.push(\"/results\");\n    }\n  };\n\n  handleChange = (event) => {\n    const valid = this.checkValidity(event.target.value);\n    this.setState({\n      value: event.target.value,\n      isTouched: true,\n      isValid: valid,\n    });\n  };\n\n  checkValidity = (str) => {\n    const regexp = /^\\/|\\/.*\\/| |[а-яА-ЯёЁ]|[:;?@&=+$,]|\\/$/gi;\n    /* Регулярка для проверки:\n        недопустимых символов \";\" | \"/\" | \"?\" | \":\" | \"@\" | \"&\" | \"=\" | \"+\" | \"$\" | \",\"\n        слеш в начале или конце строки\n        больше одного слеша в строке,\n        пробел,\n        кириллица */\n\n    const check = str.match(regexp);\n\n    // проверка на наличие слеша (если слеша нет, значит ввели только имя пользователя)\n    const oneslash = str.match(/\\//g);\n\n    return !check && !!oneslash; // если ввод валидный, то вернёт true\n  };\n\n  getTargetRepoName = (value) =>\n    // получает строку вида 'qwer/tyui' возвращает строку вида 'tyui';\n    value.substr(value.indexOf(\"/\") + 1);\n\n  render() {\n    const { value, isValid, isTouched } = this.state;\n    const inputclassesClasses = [classes.input];\n\n    if (isTouched && !isValid) {\n      inputclassesClasses.push(classes.input__warn);\n    }\n\n    return (\n      <form className={classes.search} onSubmit={this.submitHandler}>\n        <label className={classes.label} htmlFor=\"searchRequest\">\n          <input\n            id=\"searchRequest\"\n            type=\"text\"\n            className={inputclassesClasses.join(\" \")}\n            value={value}\n            placeholder=\"Введите имя репозитория вида owner/repositoryName\"\n            onChange={this.handleChange}\n          />\n          <span className={classes.label__hint}>\n            Введите имя репозитория вида owner/repositoryName\n          </span>\n        </label>\n      </form>\n    );\n  }\n}\n\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (path, targetRepoName) => dispatch(actions.submitInput(path, targetRepoName)),\n  inputValid: () => dispatch(actions.validInput()),\n  notValidInput: () => dispatch(actions.notValidInput()),\n  loadStart: () => dispatch(actions.loadStart()),\n});\n\nexport default withRouter(connect(null, mapDispatchToProps)(Search));\n","import React from 'react';\nimport Aux from '../../hoc/Aux/Aux';\nimport Search from '../Search/Search';\n\nimport classes from './Home.module.css';\n\nconst Home = () => (\n  <Aux>\n    <div className={classes.Home}>\n      <h2 className={classes.greeting__h2}>Тестовое задание React (Forks)</h2>\n      <p>\n        Данное приложение, в табличном виде отображает\n        <em> forks </em>\n        введенного в поисковую строку репозитория.\n      </p>\n      <p>\n        Для ввода используется имя репозитория вида\n        <em> owner/repositoryName</em>\n        .\n      </p>\n    </div>\n    <Search />\n  </Aux>\n);\n\nexport default Home;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport classes from './Table.module.css';\n\nconst Table = ({ array, targetRepoName }) => {\n  let data = array;\n\n  if (Array.isArray(data)) {\n    data = data.map((forker) => {\n      let owner;\n      let url;\n      const repoName = forker.full_name ? forker.full_name : 'не удалось получить корректные данные';\n      const stars = forker.stargazers_count !== undefined ? forker.stargazers_count : 'не удалось получить корректные данные';\n      let key;\n\n      if (forker.owner) {\n        owner = forker.owner.login;\n        // если вдруг forker.owner.login == undefined, то сгенерировать рандомный key\n        key = forker.owner.login ? forker.owner.login : Math.random() + Math.random();\n      } else {\n        owner = 'не удалось получить корректные данные';\n        key = Math.random() + Math.random();\n      }\n\n      if (forker.html_url) {\n        url = forker.html_url;\n      } else {\n        url = '#';\n      }\n\n      return (\n        <tr key={key}>\n          <td>{repoName}</td>\n          <td>{owner}</td>\n          <td>{stars}</td>\n          <td><a href={url}>{url}</a></td>\n        </tr>\n      );\n    });\n  } else {\n    data = null;\n  }\n  console.log(targetRepoName)\n  console.log(data)\n\n  return (\n    <table className={classes.Table}>\n      <caption className={classes.caption}>{`Forks репозитория ${targetRepoName}`}</caption>\n      <thead className={classes.thead}>\n        <tr>\n          <th>Название репозитария</th>\n          <th>Владелец</th>\n          <th>Кол-во звезд</th>\n          <th>Ссылка на репозитарий форка</th>\n        </tr>\n      </thead>\n      <tbody className={classes.tbody}>\n        {data}\n      </tbody>\n    </table>\n  );\n};\n\nconst mapStateToProps = state => ({\n  array: state.table.array,\n  targetRepoName: state.main.targetRepoName,\n});\n\nexport default connect(mapStateToProps)(Table);\n","import React from 'react';\nimport classes from './Loader.module.css';\n\nconst Loader = () => (\n  <div className={classes.Loader} />\n);\n\nexport default Loader;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport * as actions from '../../store/actions/actions';\n\nimport classes from './Pagination.module.css';\n\nconst getPartOfPath = link => link.substring(link.indexOf('repositories'), link.indexOf('?page='));\n\nconst Pagination = (props) => {\n  const {\n    show, totalPages, link, currentPage, clickHandler,\n  } = props;\n  let pagination;\n  let partOfPath;\n  const continuum = 7;\n  const slots = 9;\n  const em = {\n    fontStyle: 'bold',\n    transform: 'scale(1.2)',\n  };\n\n  if (link !== '') { partOfPath = getPartOfPath(link); }\n\n  // если одна страница то пагинацию не показывать\n  if (!show || totalPages === 1) { pagination = null; }\n\n  // кол-во страниц меньше либо равно кол-ву слотов пагинации\n  if (totalPages > 1 && totalPages <= slots) {\n    pagination = (\n      <div className={classes.Pagination}>\n        {\n          Array(totalPages).fill('').map((n, index) => (\n            <button\n              key={Math.random()}\n              className={classes.button}\n              type=\"button\"\n              style={index === currentPage - 1 ? em : {}}\n              onClick={() => clickHandler(`${partOfPath}?page=${index + 1}`, index + 1)}\n            >\n              {index + 1}\n            </button>\n          ))\n        }\n      </div>\n    );\n  }\n  /* если кол-во страниц больше чем кол-во слотов */\n\n  // текущая страница в начале списка пагинации\n  if (totalPages > slots && currentPage <= continuum) {\n    pagination = (\n      <div className={classes.Pagination}>\n        {\n          Array(slots).fill('').map((btn, index) => {\n            let content = index + 1;\n            let onClickHandler = () => clickHandler(`${partOfPath}?page=${index + 1}`, index + 1);\n            if (index === 7) { content = '...'; }\n            if (index === 8) {\n              content = totalPages;\n              onClickHandler = () => clickHandler(`${partOfPath}?page=${totalPages}`, totalPages);\n            }\n            return (\n              <button\n                key={Math.random()}\n                className={classes.button}\n                type=\"button\"\n                style={index === currentPage - 1 ? em : {}}\n                onClick={onClickHandler}\n              >\n                { content }\n              </button>);\n          })\n        }\n        <button\n          key={Math.random()}\n          className={[classes.button, classes.arrowButton].join(' ')}\n          type=\"button\"\n          onClick={() => clickHandler(`${partOfPath}?page=${currentPage + 1}`, currentPage + 1)}\n        >\n          Next\n        </button>\n      </div>\n    );\n  }\n\n  // текущая страница в середине списка пагинации\n  if (totalPages > slots && currentPage > continuum && currentPage <= totalPages - continuum) {\n    const arr = [];\n    const center = currentPage - 4;\n    for (let i = center; i < center + 9; i += 1) { arr.push(i); }\n    pagination = (\n      <div className={classes.Pagination}>\n        <button\n          key={Math.random()}\n          className={[classes.button, classes.arrowButton].join(' ')}\n          type=\"button\"\n          onClick={() => clickHandler(`${partOfPath}?page=${currentPage - 1}`, currentPage - 1)}\n        >\n          Prev\n        </button>\n        {\n          arr.map((number, index) => {\n            let content = number;\n            let onClickHandler = () => clickHandler(`${partOfPath}?page=${number}`, number);\n            if (index === 0) {\n              content = '1';\n              onClickHandler = () => clickHandler(`${partOfPath}?page=1`, 1);\n            }\n            if (index === 1 || index === 7) { content = '...'; }\n            if (index === 8) {\n              content = totalPages;\n              onClickHandler = () => clickHandler(`${partOfPath}?page=${totalPages}`, totalPages);\n            }\n            return (\n              <button\n                key={Math.random()}\n                className={classes.button}\n                type=\"button\"\n                style={number === currentPage ? em : {}}\n                onClick={onClickHandler}\n              >\n                {content}\n              </button>);\n          })\n        }\n        <button\n          key={Math.random()}\n          className={[classes.button, classes.arrowButton].join(' ')}\n          type=\"button\"\n          onClick={() => clickHandler(`${partOfPath}?page=${currentPage + 1}`, currentPage + 1)}\n        >\n          Next\n        </button>\n      </div>\n    );\n  }\n\n  // текущая страница в конце списка пагинации\n  if (totalPages > slots && currentPage > continuum && currentPage > totalPages - continuum) {\n    const arr = [];\n    const item = totalPages - slots + 1;\n    for (let i = item; i <= totalPages; i += 1) { arr.push(i); }\n    pagination = (\n      <div className={classes.Pagination}>\n        <button\n          key={Math.random()}\n          className={[classes.button, classes.arrowButton].join(' ')}\n          type=\"button\"\n          onClick={() => clickHandler(`${partOfPath}?page=${currentPage - 1}`, currentPage - 1)}\n        >\n          Prev\n        </button>\n        {\n          arr.map((number, index) => {\n            let content = number;\n            let onClickHandler = () => clickHandler(`${partOfPath}?page=${number}`, number);\n            if (index === 0) {\n              content = '1';\n              onClickHandler = () => clickHandler(`${partOfPath}?page=1`, 1);\n            }\n            if (index === 1) { content = '...'; }\n            if (index === 8) { content = totalPages; }\n            return (\n              <button\n                key={Math.random()}\n                className={classes.button}\n                type=\"button\"\n                style={number === currentPage ? em : {}}\n                onClick={onClickHandler}\n              >\n                {content}\n              </button>);\n          })\n        }\n      </div>\n    );\n  }\n\n  return pagination;\n};\n\nconst mapStateToProps = state => ({\n  totalPages: state.pagination.totalPages,\n  link: state.pagination.link,\n  currentPage: state.pagination.currentPage,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  clickHandler: (path, targetPage) => dispatch(\n    actions.clickHandlerPaginationButton(path, targetPage),\n  ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Pagination);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport Aux from '../../hoc/Aux/Aux';\nimport Search from '../Search/Search';\nimport Table from '../Table/Table';\nimport Loader from '../Loader/Loader';\nimport Pagination from '../Pagination/Pagination';\n\nconst Results = (props) => {\n  const { error404, isInputValid, loading } = props;\n\n  const messageOn404 = (\n    <div style={{ margin: 'auto', width: '50%', textAlign: 'center' }}>\n      <p style={{ marginBottom: '.5rem' }}>Ничего не удалось найти.</p>\n      <p>\n        Возможно такого пользователя(репозитория) не существует или допущена\n        ошибка при вводе имени пользователя(репозитория).\n      </p>\n    </div>);\n\n  const messageInputNotValid = <p>Невалидный ввод</p>;\n\n  let result;\n\n  if (error404 && isInputValid) {\n    result = < Aux >\n      <Search />\n      {messageOn404}\n      <Pagination />\n    </Aux >;\n  }\n  if (!error404 && isInputValid) {\n    result = <Aux>\n      <Search />\n      <Table />\n      <Pagination />\n    </Aux>;\n  }\n  if (!isInputValid) {\n    result = <Aux>\n      <Search />\n      {messageInputNotValid}\n      <Pagination />\n    </Aux>\n  }\n  if (loading) { result = <Loader />; }\n\n  return (\n      result\n  );\n};\n\nconst mapStateToProps = state => ({\n  error404: state.remoteIterations.error404,\n  isInputValid: state.main.isInputValid,\n  loading: state.main.loading,\n});\n\nexport default connect(mapStateToProps)(Results);\n","import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n\nimport Layout from \"./hoc/Layout/Layout\";\nimport Home from \"./components/Home/Home\";\nimport Results from \"./components/Results/Results\";\n\nimport styles from \"./index.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const routes = (\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/results\" component={Results} />\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n\n    return (\n      <div className='App'>\n        <Layout>{routes}</Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import * as actionTypes from '../actions/actionTypes';\n\nconst copyState = (state) => {\n  const newState = JSON.parse(JSON.stringify(state));\n  return newState;\n};\n\nconst initialState = {\n  array: [],\n};\n\nconst fillTable = (state, action) => {\n  const newState = copyState(state);\n  newState.array = action.array;\n  return newState;\n};\n\nconst clearTable = (state) => {\n  const newState = copyState(state);\n  newState.array = [];\n  return newState;\n};\n\nconst tableReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.FILL_TABLE: return fillTable(state, action);\n    case actionTypes.CLEAR_TABLE: return clearTable(state);\n    default: return state;\n  }\n};\n\nexport default tableReducer;\n","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n  error404: false,\n};\n\nconst copyState = (state) => {\n  const newState = JSON.parse(JSON.stringify(state));\n  return newState;\n};\n\nconst occured404 = (state) => {\n  const newState = copyState(state);\n  newState.error404 = true;\n  return newState;\n};\n\nconst cansel404 = (state) => {\n  const newState = copyState(state);\n  newState.error404 = false;\n  return newState;\n};\n\nconst remoteIterations = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ERR_404: return occured404(state, action);\n    case actionTypes.ERR_404_GONE: return cansel404(state, action);\n    default: return state;\n  }\n};\n\nexport default remoteIterations;\n","import * as actionTypes from '../actions/actionTypes';\n\nconst copyState = (state) => {\n  const newState = JSON.parse(JSON.stringify(state));\n  return newState;\n};\n\nconst initialState = {\n  isInputValid: true,\n  loading: false,\n  targetRepoName: '',\n};\n\nconst inputValid = (state) => {\n  const newState = copyState(state);\n  newState.isInputValid = true;\n  return newState;\n};\n\nconst inputNotValid = (state) => {\n  const newState = copyState(state);\n  newState.isInputValid = false;\n  return newState;\n};\n\nconst loadStart = (state) => {\n  const newState = copyState(state);\n  newState.loading = true;\n  return newState;\n};\n\nconst loadSuccess = (state) => {\n  const newState = copyState(state);\n  newState.loading = false;\n  return newState;\n};\n\nconst loadFails = (state) => {\n  const newState = copyState(state);\n  newState.loading = false;\n  return newState;\n};\n\nconst initTargetRepoName = (state, action) => {\n  const newState = copyState(state);\n  const { targetRepoName } = action;\n  newState.targetRepoName = targetRepoName;\n  return newState;\n};\n\nconst clearTargetRepoName = (state) => {\n  const newState = copyState(state);\n  newState.targetRepoName = '';\n  return newState;\n};\n\nconst main = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.VALID_INPUT: return inputValid(state);\n    case actionTypes.NOT_VALID_INPUT: return inputNotValid(state);\n    case actionTypes.LOAD_START: return loadStart(state);\n    case actionTypes.LOAD_SUCCESS: return loadSuccess(state);\n    case actionTypes.LOAD_FAILS: return loadFails(state);\n    case actionTypes.INIT_TARGET_REPO_NAME: return initTargetRepoName(state, action);\n    case actionTypes.CLEAR_TARGET_REPO_NAME: return clearTargetRepoName(state);\n    default: return state;\n  }\n};\n\nexport default main;\n","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n  totalPages: 1,\n  link: '',\n  currentPage: 1,\n};\nconst copyState = (state) => {\n  const newState = JSON.parse(JSON.stringify(state));\n  return newState;\n};\n\nconst paginationInit = (state, action) => {\n  const { strWithLinks } = action;\n  const newState = copyState(state);\n  // получить ссылку и кол-во страниц\n  if (strWithLinks) {\n    const links = strWithLinks.match(/http[^<>]*/gi);\n    const link = links[1];\n    const totalPages = Number(link.substring(link.indexOf('?page=') + 6));\n    newState.link = link;\n    newState.totalPages = totalPages;\n  } else {\n    newState.totalPages = 1;\n    newState.link = '';\n  }\n  newState.currentPage = 1;\n  return newState;\n};\n\nconst paginationUpdate = (state, action) => {\n  const newState = copyState(state);\n  newState.currentPage = action.targetPage;\n  return newState;\n};\n\nconst paginationReset = (state) => {\n  const newState = copyState(state);\n  newState.totalPages = 1;\n  newState.link = '';\n  newState.targetPage = 1;\n  return newState;\n};\n\nconst pagination = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.PAGINATION_INIT: return paginationInit(state, action);\n    case actionTypes.PAGINATION_UPDATE: return paginationUpdate(state, action);\n    case actionTypes.PAGINATION_RESET: return paginationReset(state, action);\n    default: return state;\n  }\n};\n\nexport default pagination;\n","import { combineReducers } from 'redux';\nimport tableReducer from './tableReducer';\nimport remoteIterations from './remoteIterations';\nimport main from './main';\nimport pagination from './pagination';\n\nconst rootReducer = combineReducers({\n  table: tableReducer,\n  remoteIterations,\n  main,\n  pagination,\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport './index.css';\nimport App from './App';\n\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport rootReducer from \"./store/reducers/index\";\n\nconst store = createStore(rootReducer, compose(applyMiddleware(thunk)));\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById(\"root\"));\n"],"sourceRoot":""}